x-common-config: &common-config
  entrypoint: "/entrypoint.sh"
  build:
    context: "$HOME/git/grand_tour_box/box_utils/box_auto/docker"
    dockerfile: "$HOME/git/grand_tour_box/box_utils/box_auto/docker/box.Dockerfile"
    ssh:
      default: "$HOME/.ssh/jonfrey_ws"
  image: rslethz/grand_tour_box:kleinkram
  runtime: nvidia
  # network_mode: host
  privileged: true
  environment:
    QT_X11_NO_MITSHM: "1"
    XAUTHORITY: "/root/.docker.xauth"
    DISPLAY: "$DISPLAY"  
    KLEINKRAM_ACTIVE: "False"  # Added this line
  deploy:
    resources:
      reservations:
        devices:
          - driver: nvidia
            count: all
            capabilities:
              - gpu
              - utility # nvidia-smi
              - compute # CUDA
              - video   # encoding 
  volumes:
    - "${MISSION_DATA:-/mission/data}:/tmp_disk"
    - "${GRAND_TOUR_BOX_PATH:-$HOME/git/grand_tour_box}:/home/catkin_ws/src/grand_tour_box"

x-ros2-common-config: &ros2-common-config
  build:
    context: "$HOME/git/grand_tour_box/box_utils/box_auto/docker"
    dockerfile: "$HOME/git/grand_tour_box/box_utils/box_auto/docker/box_ros2.Dockerfile"
    ssh:
      default: "$HOME/.ssh/jonfrey_ws"
  image: rslethz/grand_tour_box:bridge
  runtime: nvidia
  # network_mode: host
  privileged: true
  environment:
    QT_X11_NO_MITSHM: "1"
    XAUTHORITY: "/root/.docker.xauth"
    DISPLAY: "$DISPLAY"
    KLEINKRAM_ACTIVE: "False"  # Added this line
  deploy:
    resources:
      reservations:
        devices:
          - driver: nvidia
            count: all
            capabilities:
              - gpu
              - utility # nvidia-smi
              - compute # CUDA
              - video   # encoding 
  volumes:
    - "${MISSION_DATA:-/mission/data}:/tmp_disk"
    - "${GRAND_TOUR_BOX_PATH:-$HOME/git/grand_tour_box}:/home/catkin_ws/src/grand_tour_box"


services:
  # Input:
  #   - _hdr.mcap
  # Output:
  #   - _hdr.bag
  hdr_convert:
    <<: *ros2-common-config
    container_name: hdr_convert
    command: ["python3 /home/catkin_ws/src/grand_tour_box/box_utils/box_auto/python/box_auto/scripts/general/mcap_to_rosbag.py"]
  
  # Input:
  #   - _hdr.bag
  # Output:
  #   - _hdr_updated.bag
  hdr_timestamp_adjuster:
    <<: *common-config
    container_name: hdr_timestamp_adjuster
    command: ["python3 /home/catkin_ws/src/grand_tour_box/box_utils/box_auto/python/box_auto/scripts/camera/hdr_timestamp_adjuster.py"]
    depends_on:
      hdr_convert:
        condition: service_completed_successfully

  # Input:
  #   - hdr_updated.bag
  #   - alphasense.bag
  # Output:
  #   - alphasense_calib.bag
  #   - hdr_calib.bag
  #   - tf_static.bag
  #   - tf_static_start_end.bag
  calibration:
    <<: *common-config
    container_name: calibration
    command: ["python3 /home/catkin_ws/src/grand_tour_box/box_utils/box_auto/python/box_auto/scripts/calibration/update_calibration.py"]
    depends_on:
      hdr_timestamp_adjuster:
        condition: service_completed_successfully

  # Input:
  #   - ap20_aux.bag
  # Output:
  #   - ap20_synced.bag
  ap20_python_online_matcher:
    <<: *common-config
    container_name: ap20_python_online_matcher
    command: ["python3 /home/catkin_ws/src/grand_tour_box/box_utils/box_auto/python/box_auto/scripts/ap20/ap20_python_online_matcher.py"]

  # Input:
  #   - ap20_synced.bag
  # Output:
  #   - ap20_synced.bag (validated)
  ap20_validate:
    <<: *common-config
    container_name: ap20_validate
    command: ["python3 /home/catkin_ws/src/grand_tour_box/box_utils/box_auto/python/box_auto/scripts/ap20/ap20_validate.py --skip_check"]
    depends_on:
      ap20_python_online_matcher:
        condition: service_completed_successfully

  # Input:
  #   - hesai.bag
  # Output:
  #   - hesai_post_processed.bag
  hesai:
    <<: *common-config
    container_name: hesai
    command: ["python3 /home/catkin_ws/src/grand_tour_box/box_utils/box_auto/python/box_auto/scripts/lidar/hesai.py"]

  preview_video:
    <<: *common-config
    container_name: preview_video
    command: ["python3 /home/catkin_ws/src/grand_tour_box/box_utils/box_converter/preview_video.py"]
    depends_on:
      hesai:
        condition: service_completed_successfully

  # Input:
  #   - hesai_post_processed.bag
  #   - livox.bag
  # Output:
  #   - hesai_filtered.bag
  #   - livox_filtered.bag
  filter_pointclouds: 
    <<: *common-config
    container_name: filter_pointclouds
    command: ["python3 /home/catkin_ws/src/grand_tour_box/box_utils/box_auto/python/box_auto/scripts/lidar/filter_pointclouds.py"]
    depends_on:
      hesai:
        condition: service_completed_successfully
  
  # Input:
  #   - hesai.bag
  #   - tf_static.bag
  # Output:
  #   - dlio.bag
  dlio:
    <<: *common-config
    container_name: dlio
    command: ["python3 /home/catkin_ws/src/grand_tour_box/box_utils/box_auto/python/box_auto/scripts/application/dlio.py"]
    depends_on:
      hesai:
        condition: service_completed_successfully
      calibration:
        condition: service_completed_successfully

  # Input:
  #   - dlio.bag
  #   - tf_static.bag
  # Output:
  #   - open3d_slam.bag
  # open3d_slam:
  #   <<: *common-config
  #   container_name: open3d_slam
  #   command: ["python3 /home/catkin_ws/src/grand_tour_box/box_utils/box_auto/python/box_auto/scripts/application/open3d_slam.py"]
  #   depends_on:
  #     calibration:
  #       condition: service_completed_successfully
  #     dlio:
  #       condition: service_completed_successfully

  # Input:
  #   - dlio.bag
  #   - tf_static.bag
  # Output:
  #   - dlio_tf_static.bag
  merge_dlio_tf_static:
    <<: *common-config
    container_name: merge_dlio_tf_static
    command: ["python3 /home/catkin_ws/src/grand_tour_box/box_utils/box_auto/python/box_auto/scripts/general/merge_dlio_tf_static.py"]
    depends_on:
      dlio:
        condition: service_completed_successfully
      calibration:
        condition: service_completed_successfully

  # Input:
  #   - tf_static.bag
  #   - ap20_robot.bag
  #   - cpt7_ie_tc.bag
  # Output:
  #   - graph_msf.bag
  graph_msf:
    <<: *common-config
    container_name: graph_msf
    command: ["python3 /home/catkin_ws/src/grand_tour_box/box_utils/box_auto/python/box_auto/scripts/application/graph_msf.py"]
    depends_on:
      hesai:
        condition: service_completed_successfully
      calibration:
        condition: service_completed_successfully
      ap20_python_online_matcher:
        condition: service_completed_successfully

  # This is currently not supported by any docker container.
  # Input:
  #   - dlio_tf_static.bag
  # Output:
  #   - wavemap.bag
  # wavemap:
  #   <<: *common-config
  #   container_name: wavemap
  #   command: ["python3 /home/catkin_ws/src/grand_tour_box/box_utils/box_auto/python/box_auto/scripts/application/wavemap_create.py"]
  #   depends_on:
  #     merge_dlio_tf_static:
  #       condition: service_completed_successfully

  # Input:
  #   - alphasense_calib.bag
  # Output:
  #   - alphasense_color.bag
  # color_correction:
  #   <<: *common-config
  #   container_name: color_correction
  #   command: ["python3 /home/catkin_ws/src/grand_tour_box/box_utils/box_auto/python/box_auto/scripts/camera/color_correction.py"]
  #   depends_on:
  #     calibration:
  #       condition: service_completed_successfully

  # Input: 
  #   - hdr_calib.bag
  #   - alphasense_color.bag
  # Output:
  #   - hdr_rect.bag
  #   - alphasense_rect.bag
  # rectify:
  #   <<: *common-config
  #   container_name: rectify
  #   command: ["python3 /home/catkin_ws/src/grand_tour_box/box_utils/box_auto/python/box_auto/scripts/camera/rectify.py"]
  #   depends_on:
  #     calibration:
  #       condition: service_completed_successfully
  #     hdr_timestamp_adjuster:
  #       condition: service_completed_successfully
  #     color_correction:
  #       condition: service_completed_successfully

  # topic_freq:
  #   <<: *common-config
  #   container_name: topic_freq
  #   command: ["python3 /home/catkin_ws/src/grand_tour_box/box_utils/box_auto/python/box_auto/scripts/verification/topic_freq.py"]

  #   depends_on:
  #     hesai:
  #       condition: service_completed_successfully
  #     cpt7:
  #       condition: service_completed_successfully
  #     ap20_python_online_matcher:
  #       condition: service_completed_successfully
  #     color_correction:
  #       condition: service_completed_successfully
  
  # cpt7:
  #   <<: *common-config
  #   container_name: cpt7
  #   command: ["python3 /home/catkin_ws/src/grand_tour_box/box_utils/box_auto/python/box_auto/scripts/cpt7/cpt7.py"]

  # imu_timesync:
  #   <<: *common-config
  #   container_name: imu_timesync
  #   command: ["python3 /home/catkin_ws/src/grand_tour_box/box_utils/box_auto/python/box_auto/scripts/verification/imu_timesync.py"]
  #   depends_on:
  #     calibration:
  #       condition: service_completed_successfully
  