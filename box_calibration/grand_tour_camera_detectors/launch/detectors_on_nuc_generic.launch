<launch>
    <!-- Define global target_type parameter -->
    <arg name="use_april_grid"/>
    <arg name="record_pointcloud" default="False"/>
    <arg name="record_imu" default="False"/>
    <arg name="record_prism" default="False"/>
    <arg name="record_imu_pointcloud" default="False"/>

    <arg name="node_start_delay" default="1.0" /> 
    <!-- Include camera detectors with target_type -->
    <include file="$(find grand_tour_camera_detectors)/launch/generic_detector.launch">
        <arg name="name" value="cam1_detector"/>
        <arg name="image_topic" value="/gt_box/alphasense_driver_node/cam1"/>
        <arg name="use_april_grid" value="$(arg use_april_grid)"/>
        <arg name="recording_bag_name" value="alphasense_front_center"/>
    </include>

    <include file="$(find grand_tour_camera_detectors)/launch/generic_detector.launch">
        <arg name="name" value="cam2_detector"/>
        <arg name="image_topic" value="/gt_box/alphasense_driver_node/cam2"/>
        <arg name="use_april_grid" value="$(arg use_april_grid)"/>
        <arg name="recording_bag_name" value="alphasense_front_left"/>
    </include>

    <include file="$(find grand_tour_camera_detectors)/launch/generic_detector.launch">
        <arg name="name" value="cam3_detector"/>
        <arg name="image_topic" value="/gt_box/alphasense_driver_node/cam3"/>
        <arg name="use_april_grid" value="$(arg use_april_grid)"/>
        <arg name="recording_bag_name" value="alphasense_front_right"/>
    </include>

    <include unless="$(arg record_imu)" file="$(find grand_tour_camera_detectors)/launch/generic_detector.launch">
        <arg name="name" value="cam4_detector"/>
        <arg name="image_topic" value="/gt_box/alphasense_driver_node/cam4"/>
        <arg name="use_april_grid" value="$(arg use_april_grid)"/>
        <arg name="recording_bag_name" value="alphasense_left"/>
    </include>

    <include unless="$(arg record_imu)" file="$(find grand_tour_camera_detectors)/launch/generic_detector.launch">
        <arg name="name" value="cam5_detector"/>
        <arg name="image_topic" value="/gt_box/alphasense_driver_node/cam5"/>
        <arg name="use_april_grid" value="$(arg use_april_grid)"/>
        <arg name="recording_bag_name" value="alphasense_right"/>
    </include>

    <node if="$(arg record_pointcloud)" 
            pkg="grand_tour_camera_detectors" 
            type="recorder_relay.py"
            name="recorder_relay" output="screen"
            ns="gt_box"
            launch-prefix="bash -c 'sleep $(arg node_start_delay); $0 $@' " >
        <param name="capability_group" value="Recording"/>
        <param name="yaml_file" value="calib_lidar"/>
    </node>

    <node if="$(arg record_imu)" 
            pkg="grand_tour_camera_detectors" type="recorder_relay.py"
          name="recorder_relay" output="screen"
          ns="gt_box"
          launch-prefix="bash -c 'sleep $(arg node_start_delay); $0 $@' " >
        <param name="capability_group" value="Recording"/>
        <param name="yaml_file" value="calib_imu"/>
    </node>

    <node if="$(arg record_imu_pointcloud)" 
        pkg="grand_tour_camera_detectors" type="recorder_relay.py"
          name="recorder_relay" output="screen"
          ns="gt_box"
          launch-prefix="bash -c 'sleep $(arg node_start_delay); $0 $@' " >
        <param name="capability_group" value="Recording"/>
        <param name="yaml_file" value="calib_imu_lidar"/>
    </node>

    <node if="$(arg record_prism)" 
            pkg="grand_tour_camera_detectors" type="recorder_relay.py"
          name="recorder_relay" output="screen"
          ns="gt_box"
          launch-prefix="bash -c 'sleep $(arg node_start_delay); $0 $@' " >
        <param name="capability_group" value="Recording"/>
        <param name="yaml_file" value="calib_imu"/>
    </node>
</launch>